legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[2],beta.hat[2]+beta.hat[4])
abline(beta.hat[1]+beta.hat[4],beta.hat[2]+beta.hat[4])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4])
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4])
data(Puromycin)
attach(Puromycin)
y <- rate
x1 <- conc
x2 <- as.numeric(state == "treated")
u1 <- log(x1)
u2 <- x2
u3 <- x2*log(x1)
X <- as.matrix(cbind(1,u1,u2,u3))
colnames(X) <- c("b0", "b1", "b2", "b3")
y <- as.matrix(rate)
beta.hat <- solve(t(X)%*%X)%*%t(X)%*%y
beta.hat
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4])
abline(beta.hat[1],beta.hat[2], lty=2)
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2], lty=2)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4])
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty=2)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty=3)
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty=4)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty='dotted')
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty='dotted')
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty='dots')
ted
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty='dotted')
beta.hat
b1.hat <- cor(conc, rate) * (sd(rate)/sd(conc))
b0.hat <- (mean(rate) - (mean(conc) * b1.hat))
b1.hat <- cor(conc, rate) * (sd(rate)/sd(conc))
b0.hat <- (mean(rate) - (mean(conc) * b1.hat))
abline(32,75, 189)
abline(32.75, 189)
abline(189, 32.75)
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4], lty='dotted')
abline(189, 32.75, lty=2)
mean(beta.hat[1],beta.hat[1]+beta.hat[3])
mean(5,10)
(beta.hat[1],beta.hat[1]+beta.hat[3])/2
(beta.hat[1]+beta.hat[1]+beta.hat[3])/2
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
abline((beta.hat[1]+beta.hat[1]+beta.hat[3])/2, (beta.hat[2]+beta.hat[2]+beta.hat[4])/2, lty=2)
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline((beta.hat[1]+beta.hat[1]+beta.hat[3])/2, (beta.hat[2]+beta.hat[2]+beta.hat[4])/2, lty=2)
(beta.hat[1]+beta.hat[1]+beta.hat[3])/2
(beta.hat[2]+beta.hat[2]+beta.hat[4])/2
# Since there are an equal number of observations from  the treated and
# untreated categories, we can just take the mean of the two intercepts
# and the mean of the two slopes we calculated for a treatment-blind
# regression model.
intercept <- (beta.hat[1]+beta.hat[1]+beta.hat[3])/2
slope <- (beta.hat[2]+beta.hat[2]+beta.hat[4])/2
intercept; slope
conc
rate
intercept+slope*(conc[1])
log(conc[1])
conc[1]
intercept+slope*log(conc[1])
ssr.f <- 0
for (j in 1:length(X))
{
ssr.f <- ssr.f + (rate[j]-(intercept+slope*log(conc[j])))^2
}
ssr.f
(rate[1]-(intercept+slope*log(conc[1])))^2
ssr.f <- 0
for (j in 1:length(X))
{
ssr.f <- ssr.f + (rate[j]-(intercept+slope*log(conc[j])))^2
}
ssr.f <- 0
for (j in 1:length(X))
{
ssr.f <- ssr.f + (rate[j]-(intercept+slope*log(conc[j])))^2
}
ssr.a <- 0
ssr.f
length(X)
ssr.f <- 0
for (j in 1:length(rate))
{
ssr.f <- ssr.f + (rate[j]-(intercept+slope*log(conc[j])))^2
}
ssr.f
beta.hat
ssr.a <- 0
for (j in 1:length(rate))
{
ssr.a <- ssr.a + (rate[j]-(beta.hat[1]+beta.hat[2]*log(conc[j])+beta.hat[3]*x2[j]+beta.hat[4]*x2[j]*log(conc[j])))^2
}
ssr.a
ssr.f <- 0
for (j in 1:length(rate))
{
ssr.f <- ssr.f + (rate[j]-(intercept+slope*log(conc[j])))^2
}
# Sum of Squared Residuals from (f):
ssr.f
ssr.a <- 0
for (j in 1:length(rate))
{
ssr.a <- ssr.a + (rate[j]-(beta.hat[1]+beta.hat[2]*log(conc[j])+beta.hat[3]*x2[j]+beta.hat[4]*x2[j]*log(conc[j])))^2
}
# Sum of Squared Residuals from (a):
ssr.a
F.stat <- ((sse.red - sse.full)/(3 - 1))/(sse.full/(23 - 3 - 1))
sse.full <- ssr.a
sse.red <- ssr.f
F.stat <- ((sse.red - sse.full)/(3 - 1))/(sse.full/(23 - 3 - 1))
F.stat
pnorm(0,0,1)
dnorm(.5,0,1)
qnorm(.5,0,1)
dnorm(2.5,0,1)
dnorm(0,0,1)
qnorm(.99,0,1)
qf(.99, 2, 19)
critical.val <- qf(.99, 2, 19)
# Critical Value of F(2, 19)-test at 0.01 significance level:
critical.val
df(F.stat, 2, 19)
# P-value of test statistic:
df(F.stat, 2, 19)
sigma.hat <- sqrt(ssr.a/(23 - 3 - 1)) # get estimate of sigma
Omega <- solve(t(X)%*%X) # now Omega[j,j] gives (j,j) entry of Omega
a <- c(1,-1)
loci.xnew <- t(a)%*%beta.hat-qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
upci.xnew <- t(a)%*%beta.hat+qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
sigma.hat <- sqrt(ssr.a/(23 - 3 - 1)) # get estimate of sigma
Omega <- solve(t(X)%*%X) # now Omega[j,j] gives (j,j) entry of Omega
a <- c(1,-1, -1)
loci.xnew <- t(a)%*%beta.hat-qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
upci.xnew <- t(a)%*%beta.hat+qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
sigma.hat <- sqrt(ssr.a/(23 - 3 - 1)) # get estimate of sigma
Omega <- solve(t(X)%*%X) # now Omega[j,j] gives (j,j) entry of Omega
a <- c(1,-1, -1)
loci.xnew <- t(a)%*%beta.hat-qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
a <- c(1,-1)
loci.xnew <- t(a)%*%beta.hat-qt(.975,23-3-1)*sigma.hat*sqrt(t(a)%*%Omega%*%a)
qf(.975, 2, 19)
qf(.95, 2, 19)
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1 + qf(.975, 2, 19)
lower.ci
lower.ci
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) + qf(.975, 2, 19)
lower.ci
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.975, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
^2
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.975, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
upper <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) + qf(.975, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.95, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) + qf(.95, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
upper.ci
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.95, 3, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) + qf(.95, 3, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
upper.ci
lower.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) - qf(.95, 3, 23) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci <- (beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1) + qf(.95, 3, 23) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci
upper.ci
class(Puromycin)
anova(Puromycin)
beta.hat[1]+beta.hat[2]*-1
beta.hat[1]+beta.hat[2]*-1+beta.hat[3]+beta.hat[4]*-1
plot(y~u1,pch=ifelse(u2==1,1,2),xlab="log(conc)",ylab="rate")
legend(x = -3.75, y = 200,legend=c("treated","untreated"),pch=c(1,2),bty="n")
abline(beta.hat[1],beta.hat[2])
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4],lty='dotted')
lower.ci.diff <-
beta.hat[1]+beta.hat[2]*-1
lower.ci.diff <-
beta.hat[1]+beta.hat[2]*-1
lower.ci.diff <-
beta.hat[1]+beta.hat[2]*-1
beta.hat[1]+beta.hat[2]*-1
beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - beta.hat[1]+beta.hat[2]*-1
lower.ci.diff
beta.hat[1]+beta.hat[2]*-1
beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1)
lower.ci.diff
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sd(y) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) + (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff
(beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1)
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) + qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.95, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) + qf(.95, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) + qf(.975, 2, 19) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff
(beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1)
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) - (beta.hat[1]+beta.hat[2]*-1) - qf(.975, 3, 23) * sqrt((1/23)+((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
lower.ci.diff
lower.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) -
(beta.hat[1]+beta.hat[2]*-1) - qf(.975, 2, 19) * sqrt((1/23)+
((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
upper.ci.diff <- (beta.hat[1]+beta.hat[3]+beta.hat[2]*-1+beta.hat[4]*-1) -
(beta.hat[1]+beta.hat[2]*-1) + qf(.975, 2, 19) * sqrt((1/23)+
((-1-mean(conc))^2)/((23-1)*sd(conc)^2))
lower.ci.diff
upper.ci.diff
?anova
?aov
aov(y ~ u1 + u2 + u3)
data(Puromycin)
attach(Puromycin)
y <- rate
x1 <- conc
x2 <- as.numeric(state == "treated")
u1 <- log(x1)
u2 <- x2
u3 <- x2*log(x1)
X <- as.matrix(cbind(1,u1,u2,u3))
colnames(X) <- c("b0", "b1", "b2", "b3")
y <- as.matrix(rate)
beta.hat <- solve(t(X)%*%X)%*%t(X)%*%y
beta.hat
X
a.val <- 0
for (j in 1:4)
{
a.val <- a.val + (1000*.05)/1.08^j
}
av.al <- a.val + 1000/1.08^4
a.val
a.val <- 0
for (j in 1:4)
{
a.val <- a.val + (1000*.05)/(1.08^j)
}
av.al <- a.val + 1000/1.08^4
a.val
a.val <- 0
for (j in 1:4)
{
a.val <- a.val + (1000*.05)/(1.08^j)
}
a.val <- a.val + 1000/1.08^4
a.val
b.val <- 0
for (j in 1:30)
{
b.val <- b.val + (1000*.05)/(1.08^j)
}
b.val <- b.val + 1000/1.08^30
b.val
# set data source
getwd()
setwd("/Users/jack/Desktop/Documents/Barrier Island Surf")
# read in data set
data <- read.table("41004h2015.txt", header = TRUE, sep=',')
# set data source
getwd()
setwd("/Users/jack/Documents/Github/Buoy-Analysis")
# read in data set
data <- read.table("41004h2015.txt", header = TRUE, sep=',')
indx <- sapply(data, is.factor)
data[indx] <- lapply(data[indx], function(x) as.numeric(as.character(x)))
# take out unnecessary rows and columns
data <- data[-1,]
data <- data[,-c(17,18)]
rownames(data) <- seq(length=nrow(data))
for (j in 1:length(data$WVHT))
{
if (data$WVHT[j]>20) {
data <- data[-j,]
}
}
attach(data)
WSPD.2 <- WSPD*WSPD
summary(lm(WVHT ~ WSPD + WSPD.2))
plot(WSPD, WVHT, cex=.6, main='Exponential Relationship Between Wind Speed and Wave Height')
curve(-0.0521536*x+0.0130451*x^2+0.9535438,add=T,col='red',lwd=2)
par(mfrow=c(2,2))
plot(MM, ATMP, pch=15, cex=.7)
plot(PRES, WSPD, pch=20, cex=.4); abline(v=1013.25, lty=2, col='blue')
plot(DPD, WVHT, pch=20, cex=.4)
plot(WTMP[-c(1847,1848)], WVHT[-c(1847,1848)], pch=20, cex=.4)
par(mfrow=c(1,1))
plot(DPD, MWD, pch=20, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.4)
dir.per <- cbind(DPD,MWD)
# define kmeans
kmeans.DPD=kmeans(dir.per,3,10)
# plot the cluster centers
points(kmeans.DPD$centers, col = 2:4, cex=10)
library(plotrix)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=.1,line.col=4,start=90,clockwise=TRUE,rp.type='s',point.symbols=20,show.grid.labels=2)
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-81, -77), ylim = c(29, 36), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
plot(newmap, xlim = c(-82, -76), ylim = c(28, 37), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
plot(newmap, xlim = c(-83, -75), ylim = c(27, 38), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
plot(newmap, xlim = c(-84, -74), ylim = c(26, 39), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
plot(DPD, MWD, pch=MM, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.4)
plot(DPD, MWD, col=MM, pch=20, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.4)
plot(DPD, MWD, col=MM, pch=1, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.4)
plot(DPD, MWD, col=MM, pch=1, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.8)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=MM,start=90,clockwise=TRUE,show.grid.labels=2)
szn <- c()
for (j in 1:length(MM))
{
if (MM == 1 | 2) {szn[j] <- 1}
else [szn[j] <- 2]
}
for (j in 1:length(MM))
{
if (MM == 1 | 2) {szn[j] <- 1}
else {szn[j] <- 2}
}
szn
warnings()
szn <- c()
for (j in 1:length(MM))
{
if (MM == 1 | MM == 2) {szn[j] <- 1}
else {szn[j] <- 2}
}
szn
MM
szn <- c()
for (j in 1:length(MM))
{
if (MM[j] == 1 | MM[j] == 2) {szn[j] <- 1}
else {szn[j] <- 2}
}
szn
szn <- c()
for (j in 1:length(MM))
{
if (MM[j] == 1 | MM[j] == 3) {szn[j] <- 1}
else {szn[j] <- 2}
}
szn
plot(c(1,2,3,4),c(1,2,3,4),col=1:4)
plot(c(1,2,3,4),c(1,2,3,4),col=2:5)
plot(1:10,1:10,col=1:10)
plot(1:20,1:20,col=1:20)
plot(1:4,1:4,col=c(5,3,7,2))
szn.col <- c()
for (j in 1:length(MM))
{
if (MM[j] == 12 | MM[j] == 1 | MM[j] == 2) {szn.col[j] <- 5}
else if (MM[j] == 3 | MM[j] == 4 | MM[j] == 5)  {szn.col[j] <- 3}
else if (MM[j] == 6 | MM[j] == 7 | MM[j] == 8)  {szn.col[j] <- 7}
else {szn.col[j] <- 2}
}
szn
MM
szn.col <- c()
for (j in 1:length(MM))
{
if (MM[j] == 12 | MM[j] == 1 | MM[j] == 2) {szn.col[j] <- 5}
else if (MM[j] == 3 | MM[j] == 4 | MM[j] == 5)  {szn.col[j] <- 3}
else if (MM[j] == 6 | MM[j] == 7 | MM[j] == 8)  {szn.col[j] <- 7}
else {szn.col[j] <- 2}
}
szn.col
szn.col[900:1200]
szn.col[900:1600]
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction, K-Means Clustered', cex=.4)
plot(DPD, MWD, col=szn.col, pch=1, main='Relationship Between Wave Period and Direction', cex=.4)
plot(DPD, MWD, col=szn.col, pch=1, main='Relationship Between Wave Period and Direction', cex=1)
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.1)
# plot various relationships
par(mfrow=c(2,2))
plot(MM, ATMP, pch=15, cex=.7)
plot(PRES, WSPD, pch=20, cex=.4); abline(v=1013.25, lty=2, col='blue')
plot(DPD, WVHT, pch=20, cex=.4)
plot(WTMP[-c(1847,1848)], WVHT[-c(1847,1848)], pch=20, cex=.4)
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.3)
# plot a wave period vs direction chart, non-polar
par(mfrow=c(1,1))
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.3)
# plot a wave period vs direction chart, non-polar
dev.off()
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.3)
legend('topright', legend=1)
legend('topright', legend='Winter', pch=20, col=5)
legend('topright', legend='Spring', pch=20, col=3)
legend('topright', legend=c("Winter", "Spring"), pch=20, col=5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c(5,3,7,2))
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.4)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c(5,3,7,2))
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c(5,3,7,2))
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.6)
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c(5,3,7,2))
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=.1,line.col=4,start=90,clockwise=TRUE,rp.type='s',point.symbols=20,show.grid.labels=2)
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-84, -74), ylim = c(26, 39), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), lty=1, col=c(5,3,7,2))
legend('bottomleft', legend=c("Winter", "Spring", "Summer", "Fall"), lty=1, col=c(5,3,7,2))
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
legend('bottomleft', legend=c("Winter", "Spring", "Summer", "Fall"), lty=1, col=c(5,3,7,2))
# overlay a simplified polar plot over a map of the region
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-84, -74), ylim = c(26, 39), asp = 1)
par(new=TRUE)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=4,start=90,clockwise=TRUE,show.grid.labels=2)
# plot the same data on a polar graph
library(plotrix)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
legend('bottomleft', legend=c("Winter", "Spring", "Summer", "Fall"), lty=1, col=c(5,3,7,2))
szn.col <- c()
for (j in 1:length(MM))
{
if (MM[j] == 12 | MM[j] == 1 | MM[j] == 2) {szn.col[j] <- "aquamarine2"}
else if (MM[j] == 3 | MM[j] == 4 | MM[j] == 5)  {szn.col[j] <- "chartreuse3"}
else if (MM[j] == 6 | MM[j] == 7 | MM[j] == 8)  {szn.col[j] <- "darkgoldenrod1"}
else {szn.col[j] <- "darkorange4"}
}
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c("aquamarine2","chartreuse3","darkgoldenrod1","darkorange4"))
szn.col <- c()
for (j in 1:length(MM))
{
if (MM[j] == 12 | MM[j] == 1 | MM[j] == 2) {szn.col[j] <- "deepskyblue"}
else if (MM[j] == 3 | MM[j] == 4 | MM[j] == 5)  {szn.col[j] <- "chartreuse1"}
else if (MM[j] == 6 | MM[j] == 7 | MM[j] == 8)  {szn.col[j] <- "gold"}
else {szn.col[j] <- "darkorange2"}
}
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c("aquamarine2","chartreuse3","darkgoldenrod1","darkorange4"))
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=c("deepskyblue","chartreuse1","gold","darkorange2"))
szn.col <- c()
s.col <- c("deepskyblue","chartreuse1","gold","darkorange2")
for (j in 1:length(MM))
{
if (MM[j] == 12 | MM[j] == 1 | MM[j] == 2) {szn.col[j] <- "deepskyblue"}
else if (MM[j] == 3 | MM[j] == 4 | MM[j] == 5)  {szn.col[j] <- "chartreuse1"}
else if (MM[j] == 6 | MM[j] == 7 | MM[j] == 8)  {szn.col[j] <- "gold"}
else {szn.col[j] <- "darkorange2"}
}
plot(DPD, MWD, col=szn.col, pch=20, main='Relationship Between Wave Period and Direction', cex=.5)
legend('topright', legend=c("Winter", "Spring", "Summer", "Fall"), pch=20, col=s.col)
# plot the same data on a polar graph
library(plotrix)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
legend('bottomleft', legend=c("Winter", "Spring", "Summer", "Fall"), lty=1, col=s.col)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=.1,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=.2,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
polar.plot(DPD,MWD,main="Dominant Wave Period by Direction (Buoy 41004 - 2015)",lwd=.3,line.col=szn.col,start=90,clockwise=TRUE,show.grid.labels=2)
